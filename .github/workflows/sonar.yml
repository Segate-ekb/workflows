# MIT License
# Copyright (C) 2020 Tymko Oleg <olegtymko@yandex.ru> and contributors
# All rights reserved.

name: Контроль качества

on:
  workflow_call:
    inputs:
      github_repository:
        required: true
        type: string
      oscript_version:
        required: false
        default: 'stable'
        type: string
      sonar_host_url:
        required: false
        default: 'https://sonar.openbsl.ru'
        type: string
    secrets:
      SONAR_TOKEN:
        required: false

jobs:
  sonar:
    if: (github.repository == ${{ inputs.github_repository }} ) && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.event.repository.full_name)
    runs-on: ubuntu-latest

    steps:
      # Загрузка проекта
      - name: Актуализация
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Вычисление имени ветки
      - name: Compute branch name
        uses: nelonoel/branch-name@v1.0.1

      # Установка OneScript конкретной версии
      - name: Установка OneScript
        uses: otymko/setup-onescript@v1.2
        with:
          version: ${{ inputs.oscript_version }}

      # Установка зависимостей пакета
      - name: Установка зависимостей
        run: |
          opm install opm
          opm install -l --dev

      # Запуск тестов и сбор покрытия кода
      - name: Покрытие кода
        run: oscript ./tasks/coverage.os

      - name: Извлечение версии пакета
        shell: bash
        run: echo "##[set-output name=version;]`cat packagedef | grep ".Версия(" | sed 's|[^"]*"||' | sed -r 's/".+//'`"
        id: extract_version

      - name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v3

      # Анализ проекта в SonarQube (ветка)
      - name: Анализ в SonarQube (branch)
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: sonar-scanner
          -Dsonar.host.url=${{ inputs.sonar_host_url }}
          -Dsonar.branch.name=${{ env.BRANCH_NAME }}
          -Dsonar.projectVersion=${{ steps.extract_version.outputs.version }}

      # Анализ проекта в SonarQube (PR)
      # https://docs.sonarqube.org/latest/analysis/pull-request/
      - name: Анализ в SonarQube (pull-request)
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: sonar-scanner
          -Dsonar.host.url=${{ inputs.sonar_host_url }}
          -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
          -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
          -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}
          -Dsonar.scm.revision=${{ github.event.pull_request.head.sha }}
